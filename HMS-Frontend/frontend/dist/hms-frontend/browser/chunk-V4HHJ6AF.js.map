{
  "version": 3,
  "sources": ["src/app/features/invoices/invoice-list/invoice-list.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\r\nimport { MatSortModule, Sort } from '@angular/material/sort';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule, FormControl } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { InvoiceService } from '../../../core/services/invoice.service';\r\nimport { Invoice } from '../../../core/models/invoice.model';\r\n\r\n@Component({\r\n  selector: 'app-invoice-list',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <h1>Invoices</h1>\r\n        <button mat-raised-button color=\"primary\" routerLink=\"new\">\r\n          <mat-icon>add</mat-icon> Create Invoice\r\n        </button>\r\n      </div>\r\n\r\n      <mat-card>\r\n        <mat-card-content>\r\n          <mat-form-field appearance=\"outline\" class=\"search-field\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput [formControl]=\"searchControl\" placeholder=\"Search invoices...\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n\r\n          <div class=\"mat-elevation-z8 table-container\">\r\n            <table mat-table [dataSource]=\"invoices\" matSort (matSortChange)=\"sortData($event)\">\r\n              <!-- Invoice Number Column -->\r\n              <ng-container matColumnDef=\"invoiceNumber\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Invoice #</th>\r\n                <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceNumber }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Guest Name Column -->\r\n              <ng-container matColumnDef=\"guestName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Guest</th>\r\n                <td mat-cell *matCellDef=\"let invoice\">{{ invoice.guestName }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Room Number Column -->\r\n              <ng-container matColumnDef=\"roomNumber\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Room</th>\r\n                <td mat-cell *matCellDef=\"let invoice\">{{ invoice.roomNumber }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Issue Date Column -->\r\n              <ng-container matColumnDef=\"issueDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Issue Date</th>\r\n                <td mat-cell *matCellDef=\"let invoice\">{{ invoice.issueDate | date:'mediumDate' }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Due Date Column -->\r\n              <ng-container matColumnDef=\"dueDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Due Date</th>\r\n                <td mat-cell *matCellDef=\"let invoice\">{{ invoice.dueDate | date:'mediumDate' }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Amount Column -->\r\n              <ng-container matColumnDef=\"totalAmount\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Amount</th>\r\n                <td mat-cell *matCellDef=\"let invoice\">{{ invoice.totalAmount | currency }}</td>\r\n              </ng-container>\r\n\r\n              <!-- Status Column -->\r\n              <ng-container matColumnDef=\"status\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\r\n                <td mat-cell *matCellDef=\"let invoice\" [ngClass]=\"getStatusClass(invoice.status)\">\r\n                  {{ invoice.status }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <!-- Actions Column -->\r\n              <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n                <td mat-cell *matCellDef=\"let invoice\">\r\n                  <button mat-icon-button [routerLink]=\"[invoice.id]\" matTooltip=\"View\">\r\n                    <mat-icon>visibility</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button [routerLink]=\"[invoice.id, 'edit']\" matTooltip=\"Edit\">\r\n                    <mat-icon>edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\r\n                  [routerLink]=\"[row.id]\" class=\"clickable-row\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [length]=\"totalInvoices\"\r\n                          [pageSize]=\"pageSize\"\r\n                          [pageSizeOptions]=\"[5, 10, 25, 50]\"\r\n                          (page)=\"handlePageEvent($event)\">\r\n            </mat-paginator>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      padding: 20px;\r\n    }\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n    .search-field {\r\n      width: 100%;\r\n      margin-bottom: 20px;\r\n    }\r\n    .table-container {\r\n      position: relative;\r\n      min-height: 400px;\r\n      overflow: auto;\r\n    }\r\n    table {\r\n      width: 100%;\r\n    }\r\n    .clickable-row {\r\n      cursor: pointer;\r\n    }\r\n    .clickable-row:hover {\r\n      background-color: rgba(0, 0, 0, 0.04);\r\n    }\r\n    .status-paid {\r\n      color: green;\r\n      font-weight: bold;\r\n    }\r\n    .status-unpaid {\r\n      color: red;\r\n      font-weight: bold;\r\n    }\r\n    .status-partially-paid {\r\n      color: orange;\r\n      font-weight: bold;\r\n    }\r\n  `]\r\n})\r\nexport class InvoiceListComponent implements OnInit {\r\n  invoices: Invoice[] = [];\r\n  displayedColumns: string[] = ['invoiceNumber', 'guestName', 'roomNumber', 'issueDate', 'dueDate', 'totalAmount', 'status', 'actions'];\r\n  totalInvoices: number = 0;\r\n  pageSize: number = 10;\r\n  pageIndex: number = 0;\r\n  searchControl = new FormControl('');\r\n\r\n  constructor(private invoiceService: InvoiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadInvoices();\r\n    \r\n    this.searchControl.valueChanges.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchTerm => {\r\n      this.pageIndex = 0;\r\n      this.loadInvoices();\r\n    });\r\n  }\r\n\r\n  loadInvoices(): void {\r\n    const searchTerm = this.searchControl.value || '';\r\n    this.invoiceService.getInvoices(this.pageIndex, this.pageSize, searchTerm)\r\n      .subscribe((result: {invoices: Invoice[], total: number}) => {\r\n        this.invoices = result.invoices;\r\n        this.totalInvoices = result.total;\r\n      });\r\n  }\r\n\r\n  handlePageEvent(event: PageEvent): void {\r\n    this.pageSize = event.pageSize;\r\n    this.pageIndex = event.pageIndex;\r\n    this.loadInvoices();\r\n  }\r\n\r\n  sortData(sort: Sort): void {\r\n    // Handle sorting logic here\r\n    this.loadInvoices();\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    switch (status.toLowerCase()) {\r\n      case 'paid':\r\n        return 'status-paid';\r\n      case 'unpaid':\r\n        return 'status-unpaid';\r\n      case 'partially paid':\r\n        return 'status-partially-paid';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n} "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDgB,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA;;;;;AAC/D,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA;;;;AAA3B,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,aAAA;;;;;AAKvC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA;;;;;AAC3D,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA;;;;AAAvB,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,SAAA;;;;;AAKvC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;;;;;AAC1D,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAAwB,IAAA,uBAAA;;;;AAAxB,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,UAAA;;;;;AAKvC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;;;;;AAChE,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;;AAA2C,IAAA,uBAAA;;;;AAA3C,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,WAAA,WAAA,YAAA,CAAA;;;;;AAKvC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;;;;;AAC9D,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;;AAAyC,IAAA,uBAAA;;;;AAAzC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,WAAA,SAAA,YAAA,CAAA;;;;;AAKvC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;;;;;AAC5D,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;;AAAoC,IAAA,uBAAA;;;;AAApC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,WAAA,WAAA,CAAA;;;;;AAKvC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;;;;;AAC5D,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFuC,IAAA,qBAAA,WAAA,OAAA,eAAA,WAAA,MAAA,CAAA;AACrC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,QAAA,GAAA;;;;;AAMF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;AAC7C,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,UAAA,EAAA,EACiC,GAAA,UAAA;AAC1D,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA,EAAW;AAEjC,IAAA,yBAAA,GAAA,UAAA,EAAA,EAA8E,GAAA,UAAA;AAClE,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA,EAAW,EAClB;;;;AALe,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,0BAAA,GAAA,KAAA,WAAA,EAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,0BAAA,GAAA,KAAA,WAAA,EAAA,CAAA;;;;;AAM5B,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;AACI,IAAA,qBAAA,cAAA,0BAAA,GAAA,KAAA,QAAA,EAAA,CAAA;;;AAuDZ,IAAO,uBAAP,MAAO,sBAAoB;EAQ/B,YAAoB,gBAA8B;AAA9B,SAAA,iBAAA;AAPpB,SAAA,WAAsB,CAAA;AACtB,SAAA,mBAA6B,CAAC,iBAAiB,aAAa,cAAc,aAAa,WAAW,eAAe,UAAU,SAAS;AACpI,SAAA,gBAAwB;AACxB,SAAA,WAAmB;AACnB,SAAA,YAAoB;AACpB,SAAA,gBAAgB,IAAI,YAAY,EAAE;EAEmB;EAErD,WAAQ;AACN,SAAK,aAAY;AAEjB,SAAK,cAAc,aAAa,KAC9B,aAAa,GAAG,GAChB,qBAAoB,CAAE,EACtB,UAAU,gBAAa;AACvB,WAAK,YAAY;AACjB,WAAK,aAAY;IACnB,CAAC;EACH;EAEA,eAAY;AACV,UAAM,aAAa,KAAK,cAAc,SAAS;AAC/C,SAAK,eAAe,YAAY,KAAK,WAAW,KAAK,UAAU,UAAU,EACtE,UAAU,CAAC,WAAgD;AAC1D,WAAK,WAAW,OAAO;AACvB,WAAK,gBAAgB,OAAO;IAC9B,CAAC;EACL;EAEA,gBAAgB,OAAgB;AAC9B,SAAK,WAAW,MAAM;AACtB,SAAK,YAAY,MAAM;AACvB,SAAK,aAAY;EACnB;EAEA,SAAS,MAAU;AAEjB,SAAK,aAAY;EACnB;EAEA,eAAe,QAAc;AAC3B,YAAQ,OAAO,YAAW,GAAI;MAC5B,KAAK;AACH,eAAO;MACT,KAAK;AACH,eAAO;MACT,KAAK;AACH,eAAO;MACT;AACE,eAAO;;EAEb;;;uBArDW,uBAAoB,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,cAAA,KAAA,GAAA,CAAA,cAAA,WAAA,GAAA,cAAA,GAAA,CAAA,YAAA,IAAA,eAAA,sBAAA,GAAA,aAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,oBAAA,iBAAA,GAAA,CAAA,aAAA,IAAA,WAAA,IAAA,GAAA,iBAAA,YAAA,GAAA,CAAA,gBAAA,eAAA,GAAA,CAAA,mBAAA,IAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,gBAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,gBAAA,SAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,YAAA,IAAA,GAAA,WAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,SAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,iBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,iBAAA,GAAA,cAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,GAAA,QAAA,UAAA,YAAA,iBAAA,GAAA,CAAA,mBAAA,IAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,mBAAA,IAAA,cAAA,QAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,IAAA,cAAA,QAAA,GAAA,YAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,IAAA,GAAA,iBAAA,GAAA,YAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AApI7B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,OAAA,CAAA,EACD,GAAA,IAAA;AACd,QAAA,iBAAA,GAAA,UAAA;AAAQ,QAAA,uBAAA;AACZ,QAAA,yBAAA,GAAA,UAAA,CAAA,EAA2D,GAAA,UAAA;AAC/C,QAAA,iBAAA,GAAA,KAAA;AAAG,QAAA,uBAAA;AAAY,QAAA,iBAAA,GAAA,kBAAA;AAC3B,QAAA,uBAAA,EAAS;AAGX,QAAA,yBAAA,GAAA,UAAA,EAAU,GAAA,kBAAA,EACU,IAAA,kBAAA,CAAA,EAC0C,IAAA,WAAA;AAC7C,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AACjB,QAAA,oBAAA,IAAA,SAAA,CAAA;AACA,QAAA,yBAAA,IAAA,YAAA,CAAA;AAAoB,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA,EAAW;AAGvC,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA8C,IAAA,SAAA,CAAA;AACK,QAAA,qBAAA,iBAAA,SAAA,8DAAA,QAAA;AAAA,iBAAiB,IAAA,SAAA,MAAA;QAAgB,CAAA;AAEhF,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAKxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAKxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAKxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAKxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAKxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAKxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAOxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAWxC,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAuD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;AAGzD,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,iBAAA,EAAA;AAGc,QAAA,qBAAA,QAAA,SAAA,6DAAA,QAAA;AAAA,iBAAQ,IAAA,gBAAA,MAAA;QAAuB,CAAA;AAC7C,QAAA,uBAAA,EAAgB,EACZ,EACW,EACV;;;AA3EW,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA;AAKC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,QAAA;AA0DK,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA;AACa,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAIpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,aAAA,EAAwB,YAAA,IAAA,QAAA,EACJ,mBAAA,0BAAA,GAAA,GAAA,CAAA;;sBA9F3C,cAAY,SAAA,cAAA,UACZ,cAAY,YACZ,iBAAe,WAAA,eACf,eAAa,SAAA,gBACb,eAAa,SACb,gBAAc,UAAA,kBAAA,iBAAA,cAAA,YAAA,WAAA,eAAA,SAAA,cAAA,QACd,oBAAkB,cAClB,eAAa,SAAA,eACb,oBAAkB,cAAA,UAAA,WAClB,gBAAc,UACd,qBAAmB,sBAAA,iBAAA,oBAAA,GAAA,QAAA,CAAA,s2BAAA,EAAA,CAAA;EAAA;;;6EAuIV,sBAAoB,EAAA,WAAA,wBAAA,UAAA,yEAAA,YAAA,IAAA,CAAA;AAAA,GAAA;",
  "names": []
}
