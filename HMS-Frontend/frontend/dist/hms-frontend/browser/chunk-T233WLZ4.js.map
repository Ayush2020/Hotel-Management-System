{
  "version": 3,
  "sources": ["src/app/core/services/invoice.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Invoice } from '../models/invoice.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoiceService {\r\n  private http = inject(HttpClient);\r\n  private apiUrl = `${environment.apiUrl}/invoices`;\r\n\r\n  getInvoices(page: number = 0, size: number = 10, search: string = ''): Observable<{invoices: Invoice[], total: number}> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString());\r\n    \r\n    if (search) {\r\n      params = params.set('search', search);\r\n    }\r\n    \r\n    return this.http.get<{invoices: Invoice[], total: number}>(this.apiUrl, { params });\r\n  }\r\n\r\n  getInvoiceById(id: string): Observable<Invoice> {\r\n    return this.http.get<Invoice>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createInvoice(invoice: Invoice): Observable<Invoice> {\r\n    return this.http.post<Invoice>(this.apiUrl, invoice);\r\n  }\r\n\r\n  updateInvoice(invoice: Invoice): Observable<Invoice> {\r\n    return this.http.put<Invoice>(`${this.apiUrl}/${invoice.id}`, invoice);\r\n  }\r\n\r\n  deleteInvoice(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  getInvoicesByGuest(guestId: string): Observable<Invoice[]> {\r\n    return this.http.get<Invoice[]>(`${this.apiUrl}/guest/${guestId}`);\r\n  }\r\n\r\n  getUnpaidInvoices(): Observable<Invoice[]> {\r\n    return this.http.get<Invoice[]>(`${this.apiUrl}/status/unpaid`);\r\n  }\r\n\r\n  getInvoicesByDateRange(startDate: string, endDate: string): Observable<Invoice[]> {\r\n    const params = new HttpParams()\r\n      .set('startDate', startDate)\r\n      .set('endDate', endDate);\r\n    \r\n    return this.http.get<Invoice[]>(`${this.apiUrl}/date-range`, { params });\r\n  }\r\n\r\n  generateInvoicePdf(id: string): Observable<Blob> {\r\n    return this.http.get(`${this.apiUrl}/${id}/pdf`, { responseType: 'blob' });\r\n  }\r\n\r\n  sendInvoiceEmail(id: string): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/${id}/send-email`, {});\r\n  }\r\n} "],
  "mappings": ";;;;;;;;;;;AASM,IAAO,iBAAP,MAAO,gBAAc;EAH3B,cAAA;AAIU,SAAA,OAAO,OAAO,UAAU;AACxB,SAAA,SAAS,GAAG,YAAY,MAAM;;EAEtC,YAAY,OAAe,GAAG,OAAe,IAAI,SAAiB,IAAE;AAClE,QAAI,SAAS,IAAI,WAAU,EACxB,IAAI,QAAQ,KAAK,SAAQ,CAAE,EAC3B,IAAI,QAAQ,KAAK,SAAQ,CAAE;AAE9B,QAAI,QAAQ;AACV,eAAS,OAAO,IAAI,UAAU,MAAM;;AAGtC,WAAO,KAAK,KAAK,IAA0C,KAAK,QAAQ,EAAE,OAAM,CAAE;EACpF;EAEA,eAAe,IAAU;AACvB,WAAO,KAAK,KAAK,IAAa,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EACtD;EAEA,cAAc,SAAgB;AAC5B,WAAO,KAAK,KAAK,KAAc,KAAK,QAAQ,OAAO;EACrD;EAEA,cAAc,SAAgB;AAC5B,WAAO,KAAK,KAAK,IAAa,GAAG,KAAK,MAAM,IAAI,QAAQ,EAAE,IAAI,OAAO;EACvE;EAEA,cAAc,IAAU;AACtB,WAAO,KAAK,KAAK,OAAa,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EACtD;EAEA,mBAAmB,SAAe;AAChC,WAAO,KAAK,KAAK,IAAe,GAAG,KAAK,MAAM,UAAU,OAAO,EAAE;EACnE;EAEA,oBAAiB;AACf,WAAO,KAAK,KAAK,IAAe,GAAG,KAAK,MAAM,gBAAgB;EAChE;EAEA,uBAAuB,WAAmB,SAAe;AACvD,UAAM,SAAS,IAAI,WAAU,EAC1B,IAAI,aAAa,SAAS,EAC1B,IAAI,WAAW,OAAO;AAEzB,WAAO,KAAK,KAAK,IAAe,GAAG,KAAK,MAAM,eAAe,EAAE,OAAM,CAAE;EACzE;EAEA,mBAAmB,IAAU;AAC3B,WAAO,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,IAAI,EAAE,QAAQ,EAAE,cAAc,OAAM,CAAE;EAC3E;EAEA,iBAAiB,IAAU;AACzB,WAAO,KAAK,KAAK,KAAK,GAAG,KAAK,MAAM,IAAI,EAAE,eAAe,CAAA,CAAE;EAC7D;;;uBAtDW,iBAAc;IAAA;EAAA;;4EAAd,iBAAc,SAAd,gBAAc,WAAA,YAFb,OAAM,CAAA;EAAA;;",
  "names": []
}
