{
  "version": 3,
  "sources": ["src/app/core/services/auth.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  roles: string[];\r\n}\r\n\r\nexport interface LoginRequest {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterRequest {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  role?: string[];\r\n}\r\n\r\nexport interface AuthResponse {\r\n  token: string;\r\n  type: string;\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  roles: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private readonly TOKEN_KEY = 'auth_token';\r\n  private readonly USER_KEY = 'auth_user';\r\n  private readonly API_URL = `${environment.apiUrl}/auth`;\r\n  \r\n  private currentUserSubject = new BehaviorSubject<User | null>(this.getUserFromStorage());\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n  \r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  \r\n  login(loginRequest: LoginRequest): Observable<AuthResponse> {\r\n    return this.http.post<AuthResponse>(`${this.API_URL}/signin`, loginRequest).pipe(\r\n      tap(response => {\r\n        this.setToken(response.token);\r\n        const user: User = {\r\n          id: response.id,\r\n          username: response.username,\r\n          email: response.email,\r\n          roles: response.roles\r\n        };\r\n        this.setUser(user);\r\n        this.currentUserSubject.next(user);\r\n      })\r\n    );\r\n  }\r\n  \r\n  register(registerRequest: RegisterRequest): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/signup`, registerRequest);\r\n  }\r\n  \r\n  logout(): void {\r\n    localStorage.removeItem(this.TOKEN_KEY);\r\n    localStorage.removeItem(this.USER_KEY);\r\n    this.currentUserSubject.next(null);\r\n    this.router.navigate(['/login']);\r\n  }\r\n  \r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n  \r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.TOKEN_KEY);\r\n  }\r\n  \r\n  getUserRoles(): string[] {\r\n    const user = this.getUserFromStorage();\r\n    return user?.roles || [];\r\n  }\r\n  \r\n  hasRole(role: string): boolean {\r\n    const roles = this.getUserRoles();\r\n    return roles.includes(role);\r\n  }\r\n  \r\n  private setToken(token: string): void {\r\n    localStorage.setItem(this.TOKEN_KEY, token);\r\n  }\r\n  \r\n  private setUser(user: User): void {\r\n    localStorage.setItem(this.USER_KEY, JSON.stringify(user));\r\n  }\r\n  \r\n  private getUserFromStorage(): User | null {\r\n    const userJson = localStorage.getItem(this.USER_KEY);\r\n    return userJson ? JSON.parse(userJson) : null;\r\n  }\r\n} "],
  "mappings": ";;;;;;;;;;;;;AAqCM,IAAO,cAAP,MAAO,aAAW;EAQtB,YAAoB,MAA0B,QAAc;AAAxC,SAAA,OAAA;AAA0B,SAAA,SAAA;AAP7B,SAAA,YAAY;AACZ,SAAA,WAAW;AACX,SAAA,UAAU,GAAG,YAAY,MAAM;AAExC,SAAA,qBAAqB,IAAI,gBAA6B,KAAK,mBAAkB,CAAE;AAChF,SAAA,eAAe,KAAK,mBAAmB,aAAY;EAEK;EAE/D,MAAM,cAA0B;AAC9B,WAAO,KAAK,KAAK,KAAmB,GAAG,KAAK,OAAO,WAAW,YAAY,EAAE,KAC1E,IAAI,cAAW;AACb,WAAK,SAAS,SAAS,KAAK;AAC5B,YAAM,OAAa;QACjB,IAAI,SAAS;QACb,UAAU,SAAS;QACnB,OAAO,SAAS;QAChB,OAAO,SAAS;;AAElB,WAAK,QAAQ,IAAI;AACjB,WAAK,mBAAmB,KAAK,IAAI;IACnC,CAAC,CAAC;EAEN;EAEA,SAAS,iBAAgC;AACvC,WAAO,KAAK,KAAK,KAAK,GAAG,KAAK,OAAO,WAAW,eAAe;EACjE;EAEA,SAAM;AACJ,iBAAa,WAAW,KAAK,SAAS;AACtC,iBAAa,WAAW,KAAK,QAAQ;AACrC,SAAK,mBAAmB,KAAK,IAAI;AACjC,SAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;EACjC;EAEA,kBAAe;AACb,WAAO,CAAC,CAAC,KAAK,SAAQ;EACxB;EAEA,WAAQ;AACN,WAAO,aAAa,QAAQ,KAAK,SAAS;EAC5C;EAEA,eAAY;AACV,UAAM,OAAO,KAAK,mBAAkB;AACpC,WAAO,MAAM,SAAS,CAAA;EACxB;EAEA,QAAQ,MAAY;AAClB,UAAM,QAAQ,KAAK,aAAY;AAC/B,WAAO,MAAM,SAAS,IAAI;EAC5B;EAEQ,SAAS,OAAa;AAC5B,iBAAa,QAAQ,KAAK,WAAW,KAAK;EAC5C;EAEQ,QAAQ,MAAU;AACxB,iBAAa,QAAQ,KAAK,UAAU,KAAK,UAAU,IAAI,CAAC;EAC1D;EAEQ,qBAAkB;AACxB,UAAM,WAAW,aAAa,QAAQ,KAAK,QAAQ;AACnD,WAAO,WAAW,KAAK,MAAM,QAAQ,IAAI;EAC3C;;;uBAlEW,cAAW,mBAAA,UAAA,GAAA,mBAAA,MAAA,CAAA;IAAA;EAAA;;4EAAX,cAAW,SAAX,aAAW,WAAA,YAFV,OAAM,CAAA;EAAA;;",
  "names": []
}
