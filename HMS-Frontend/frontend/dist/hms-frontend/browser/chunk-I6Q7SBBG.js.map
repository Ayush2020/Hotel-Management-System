{
  "version": 3,
  "sources": ["src/app/features/dashboard/dashboard.component.ts"],
  "sourcesContent": ["import { Component, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { forkJoin } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\ninterface DashboardSummary {\r\n  totalRooms: number;\r\n  availableRooms: number;\r\n  occupiedRooms: number;\r\n  totalGuests: number;\r\n  todayArrivals: number;\r\n  todayDepartures: number;\r\n  totalReservations: number;\r\n}\r\n\r\ninterface QuickAction {\r\n  label: string;\r\n  icon: string;\r\n  color: string;\r\n  route: string;\r\n  description: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, MatCardModule, MatIconModule, MatButtonModule],\r\n  template: `\r\n    <div class=\"dashboard-container\">\r\n      <h1 class=\"mat-headline-4\">Dashboard</h1>\r\n      \r\n      <div class=\"welcome-card\">\r\n        <h2 class=\"mat-headline-5\">Welcome, {{ (authService.currentUser$ | async)?.username }}!</h2>\r\n        <p class=\"mat-body-1\">{{ welcomeMessage }}</p>\r\n      </div>\r\n      \r\n      <div class=\"stats-container\">\r\n        <mat-card *ngFor=\"let stat of stats\" class=\"stat-card\" [ngClass]=\"stat.color\">\r\n          <mat-card-content>\r\n            <mat-icon class=\"stat-icon\">{{ stat.icon }}</mat-icon>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-value\">{{ stat.value }}</div>\r\n              <div class=\"stat-label\">{{ stat.label }}</div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n      \r\n      <h2 class=\"mat-headline-5 section-title\">Quick Actions</h2>\r\n      \r\n      <div class=\"actions-container\">\r\n        <mat-card *ngFor=\"let action of quickActions\" class=\"action-card\" (click)=\"navigateTo(action.route)\">\r\n          <mat-card-content>\r\n            <mat-icon [ngClass]=\"action.color\">{{ action.icon }}</mat-icon>\r\n            <h3 class=\"mat-headline-6\">{{ action.label }}</h3>\r\n            <p class=\"mat-body-1\">{{ action.description }}</p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .dashboard-container {\r\n      padding: 16px;\r\n    }\r\n    \r\n    .welcome-card {\r\n      background-color: #fff;\r\n      padding: 24px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n      margin-bottom: 24px;\r\n    }\r\n    \r\n    .section-title {\r\n      margin: 32px 0 16px;\r\n    }\r\n    \r\n    .stats-container {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\r\n      gap: 16px;\r\n      margin-bottom: 32px;\r\n    }\r\n    \r\n    .stat-card {\r\n      height: 100px;\r\n    }\r\n    \r\n    .stat-card mat-card-content {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 100%;\r\n    }\r\n    \r\n    .stat-icon {\r\n      font-size: 48px;\r\n      width: 48px;\r\n      height: 48px;\r\n      margin-right: 16px;\r\n    }\r\n    \r\n    .stat-content {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .stat-value {\r\n      font-size: 32px;\r\n      font-weight: 500;\r\n    }\r\n    \r\n    .stat-label {\r\n      font-size: 14px;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    \r\n    .actions-container {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n      gap: 16px;\r\n    }\r\n    \r\n    .action-card {\r\n      cursor: pointer;\r\n      transition: transform 0.2s, box-shadow 0.2s;\r\n    }\r\n    \r\n    .action-card:hover {\r\n      transform: translateY(-4px);\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    }\r\n    \r\n    .action-card mat-icon {\r\n      font-size: 32px;\r\n      width: 32px;\r\n      height: 32px;\r\n      margin-bottom: 16px;\r\n    }\r\n    \r\n    /* Colors */\r\n    .color-primary { color: #3f51b5; }\r\n    .color-accent { color: #ff4081; }\r\n    .color-warn { color: #f44336; }\r\n    .color-success { color: #4caf50; }\r\n    .color-info { color: #2196f3; }\r\n    \r\n    .bg-primary { background-color: #e8eaf6; }\r\n    .bg-accent { background-color: #fce4ec; }\r\n    .bg-warn { background-color: #ffebee; }\r\n    .bg-success { background-color: #e8f5e9; }\r\n    .bg-info { background-color: #e3f2fd; }\r\n  `]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  private http = inject(HttpClient);\r\n  authService = inject(AuthService);\r\n  private router = inject(Router);\r\n  \r\n  welcomeMessage = 'Welcome to the Hotel Management System dashboard.';\r\n  dashboardSummary: DashboardSummary = {\r\n    totalRooms: 0,\r\n    availableRooms: 0,\r\n    occupiedRooms: 0,\r\n    totalGuests: 0,\r\n    todayArrivals: 0,\r\n    todayDepartures: 0,\r\n    totalReservations: 0\r\n  };\r\n  \r\n  stats = [\r\n    { label: 'Total Rooms', value: 0, icon: 'hotel', color: 'bg-primary' },\r\n    { label: 'Available Rooms', value: 0, icon: 'meeting_room', color: 'bg-success' },\r\n    { label: 'Occupied Rooms', value: 0, icon: 'no_meeting_room', color: 'bg-accent' },\r\n    { label: 'Today\\'s Arrivals', value: 0, icon: 'flight_land', color: 'bg-info' },\r\n    { label: 'Today\\'s Departures', value: 0, icon: 'flight_takeoff', color: 'bg-warn' },\r\n    { label: 'Total Guests', value: 0, icon: 'people', color: 'bg-primary' }\r\n  ];\r\n  \r\n  quickActions: QuickAction[] = [\r\n    {\r\n      label: 'New Reservation',\r\n      icon: 'add_circle',\r\n      color: 'color-primary',\r\n      route: '/reservations/new',\r\n      description: 'Create a new reservation for a guest'\r\n    },\r\n    {\r\n      label: 'Check-in Guest',\r\n      icon: 'login',\r\n      color: 'color-success',\r\n      route: '/reservations/check-in',\r\n      description: 'Check-in a guest with an existing reservation'\r\n    },\r\n    {\r\n      label: 'Check-out Guest',\r\n      icon: 'logout',\r\n      color: 'color-warn',\r\n      route: '/reservations/check-out',\r\n      description: 'Check-out a guest and generate invoice'\r\n    },\r\n    {\r\n      label: 'Add New Guest',\r\n      icon: 'person_add',\r\n      color: 'color-info',\r\n      route: '/guests/new',\r\n      description: 'Register a new guest in the system'\r\n    }\r\n  ];\r\n  \r\n  ngOnInit(): void {\r\n    this.loadDashboardData();\r\n  }\r\n  \r\n  loadDashboardData(): void {\r\n    const baseUrl = environment.apiUrl;\r\n    \r\n    forkJoin({\r\n      rooms: this.http.get<any>(`${baseUrl}/rooms`).pipe(\r\n        catchError(() => [])\r\n      ),\r\n      availableRooms: this.http.get<any>(`${baseUrl}/rooms/available`).pipe(\r\n        catchError(() => [])\r\n      ),\r\n      arrivals: this.http.get<any>(`${baseUrl}/reservations/arrivals`).pipe(\r\n        catchError(() => [])\r\n      ),\r\n      departures: this.http.get<any>(`${baseUrl}/reservations/departures`).pipe(\r\n        catchError(() => [])\r\n      ),\r\n      guests: this.http.get<any>(`${baseUrl}/guests`).pipe(\r\n        catchError(() => [])\r\n      ),\r\n      reservations: this.http.get<any>(`${baseUrl}/reservations`).pipe(\r\n        catchError(() => [])\r\n      )\r\n    }).subscribe({\r\n      next: (data) => {\r\n        // Update dashboard summary\r\n        this.dashboardSummary = {\r\n          totalRooms: data.rooms.length || 0,\r\n          availableRooms: data.availableRooms.length || 0,\r\n          occupiedRooms: (data.rooms.length || 0) - (data.availableRooms.length || 0),\r\n          totalGuests: data.guests.length || 0,\r\n          todayArrivals: data.arrivals.length || 0,\r\n          todayDepartures: data.departures.length || 0,\r\n          totalReservations: data.reservations.length || 0\r\n        };\r\n        \r\n        // Update stats\r\n        this.stats[0].value = this.dashboardSummary.totalRooms;\r\n        this.stats[1].value = this.dashboardSummary.availableRooms;\r\n        this.stats[2].value = this.dashboardSummary.occupiedRooms;\r\n        this.stats[3].value = this.dashboardSummary.todayArrivals;\r\n        this.stats[4].value = this.dashboardSummary.todayDepartures;\r\n        this.stats[5].value = this.dashboardSummary.totalGuests;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading dashboard data', error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  navigateTo(route: string): void {\r\n    this.router.navigate([route]);\r\n  }\r\n} "],
  "mappings": "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",
  "names": []
}
